version: 2.1

orbs:
  ruby: circleci/ruby@1.1.2
  node: circleci/node@2
  aws-ecr: circleci/aws-ecr@6.15
  aws-ecs: circleci/aws-ecs@2.0.0
commands:
  setup:
    steps:
      - checkout
      - ruby/install-deps
      - node/install-packages:
          pkg-manager: yarn
          cache-key: "yarn.lock"
jobs:
  rspec:
    machine:
      image: circleci/classic:edge
      ## 追記
      docker_layer_caching: true
    steps:
      - checkout
      - run:
          name: Build containers
          command: docker-compose -f docker-compose.dev.yml build

      - run:
          name: Setup containers
          command: docker-compose -f docker-compose.dev.yml up -d
      
      - run:
          name: sleep 10second
          command: sleep 10
      
      - run:
          name: Setup DB
          command: docker-compose -f docker-compose.dev.yml exec rails_dev bundle exec rails db:create db:migrate RAILS_ENV=test

      - run:
          name: Rails container in
          command: docker-compose -f docker-compose.dev.yml exec rails_dev bash
            
      - run:
          name: Start RSpec
          command: bundle exec rspec

      - run:
          name: Down containers
          command: docker-compose -f docker-compose.dev.yml down


  # rubocop:
  #   docker:
      # - image: circleci/ruby:2.7.3-node
    #   - image: cimg/ruby:2.7.3
    # steps:
    #   - setup
    #   - run:
    #       name: Run rubocop
    #       command: bundle exec rubocop --parallel


  # rspec:
    # docker:
    #   - image: circleci/ruby:2.7.3-node
    #   - image: circleci/postgres:11.12
    #     name: "db"
    #     environment:
    #       POSTGRES_USER: postgres
    #       POSTGRES_DB: fd_tube_app_test
    #       POSTGRES_PASSWORD: <%= ENV['DB_PASSWORD'] %>
    # environment:
    #   BUNDLE_JOBS: "4"
    #   BUNDLE_RETRY: "3"
    #   PGHOST: 127.0.0.1
    #   PGUSER: postgres
    #   PGPASSWORD: <%= ENV['DB_PASSWORD'] %>
    #   RAILS_ENV: test
    # steps:
    #   - setup
    #   # - run:
    #   #     name: rails db:migrate
    #   #     command: bundle exec rails db:migrate
    #   # - run:
    #   #     name: Database setup
    #   #     command: bundle exec rails db:schema:load --trace
    #   - run:
    #       name: Start containers and verify it is working
    #       command: |
    #         set -x
    #         docker-compose -f docker-compose.dev.yml up -d
    #         docker-compose -f docker-compose.dev.yml exec rails_dev curl -4 --retry 10 --retry-delay 3 --retry-connrefused http://localhost:80
    #   - run:
    #       name: Run rspec
    #       command: bundle exec rspec
        
workflows:
  version: 2
  nginx_deploy:
    jobs:
      # - rspec
      # - rubocop
      - aws-ecr/build-and-push-image:
          account-url: AWS_ECR_ACCOUNT_URL
          region: AWS_REGION
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          create-repo: true
          dockerfile: containers/nginx/Dockerfile
          repo: fd_tube_app_web
          tag: "${CIRCLE_SHA1}"
          filters:
            branches:
              only: master
      - aws-ecs/deploy-service-update:
          requires:
            - aws-ecr/build-and-push-image
          family: 'fd-tube-app-task'
          cluster-name: 'fd-tube-cluster'
          service-name: 'fd-tube-app-service'
          container-image-name-updates: "container=nginx,tag=${CIRCLE_SHA1}"
  rails_deploy:
    jobs:
      - rspec
      # - rubocop
      - aws-ecr/build-and-push-image:
          account-url: AWS_ECR_ACCOUNT_URL
          region: AWS_REGION
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          create-repo: true
          dockerfile: Dockerfile.prod
          repo: fd_tube_app_rails
          tag: "${CIRCLE_SHA1}"
          filters:
            branches:
              only: master
      - aws-ecs/deploy-service-update:
          requires:
            - aws-ecr/build-and-push-image
          family: 'fd-tube-app-task'
          cluster-name: 'fd-tube-cluster'
          service-name: 'fd-tube-app-service'
          container-image-name-updates: "container=rails,tag=${CIRCLE_SHA1}"
